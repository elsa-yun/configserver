<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:loxia="http://loxia.benjamin.cn/schema/core"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
	default-autowire="byName">

	<context:component-scan
		base-package="com.elsa.configserver.dao.mybatis com.elsa.configserver.service.impl" />
	<!-- dbcp连接池 -->
	<bean id="master_supplier_data_source" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" lazy-init="false">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxWait" value="${jdbc.waittimeout}" />
		<property name="testOnBorrow" value="true" />
		<property name="poolPreparedStatements" value="true" />
		<property name="validationQuery" value="select 1 " />
	</bean>
	<bean id="slave_supplier_data_source" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" lazy-init="false">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.slave.url}" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<property name="initialSize" value="10" /><!-- 连接池初始化大小 -->
		<property name="maxActive" value="150" /><!-- 池中最大连接数-->
		<property name="maxIdle" value="150" /><!-- 池中最大空闲连接数-->
		<property name="minIdle" value="5" /><!-- 池中保持空闲的最少连接数-->
		<property name="maxWait" value="6000" /><!-- 在抛出异常之前，池等待连接被回收的最长时间:毫秒（当没有可用连接时）,默认为-1表示无限等待-->
		<property name="testOnBorrow" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="poolPreparedStatements" value="true" />
		<property name="validationQuery" value="select 1 " />
		<property name="logAbandoned" value="true"/> <!-- 连接被泄露时是否打印-->
		<property name="removeAbandoned" value="true" />   <!-- removeAbandoned: 是否自动回收超时连接-->
		<property name="removeAbandonedTimeout" value="300" />  <!--  removeAbandonedTimeout: 超时时间(以秒数为单位,默认为300秒)-->
		<property name="timeBetweenEvictionRunsMillis" value="10000" />  <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位.-->
		<property name="numTestsPerEvictionRun" value="5" />   <!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量-->
		<property name="minEvictableIdleTimeMillis" value="1800000" /> <!--  1000 * 60 * 30 连接在池中保持空闲而不被空闲连接回收器线程-->
	</bean>
	<!-- c3p0连接池 -->
<!-- 	<bean id="master_supplier_data_source" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="false">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="breakAfterAcquireFailure" value="false" />
	</bean>
	<bean id="slave_supplier_data_source" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="false">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.slave.url}" />
		<property name="user" value="root" />
		<property name="password" value="123456" />
		<property name="breakAfterAcquireFailure" value="false" />
		<property name="testConnectionOnCheckin" value="false"/> 
		<property name="testConnectionOnCheckout" value="false"/> 
	</bean> -->

	<!-- <bean id="slave_supplier_data_source" class="org.apache.commons.dbcp.BasicDataSource" 
		destroy-method="close" lazy-init="false"> <property name="driverClassName" 
		value="${jdbc.driverClassName}" /> <property name="url" value="${jdbc.slave.url}" 
		/> <property name="username" value="${jdbc.username}" /> <property name="password" 
		value="${jdbc.password}" /> <property name="initialSize" value="${jdbc.initialSize}" 
		/> <property name="maxActive" value="${jdbc.maxActive}" /> <property name="maxWait" 
		value="${jdbc.waittimeout}" /> <property name="poolPreparedStatements" value="true" 
		/> <property name="validationQuery" value="select 1 " /> </bean> -->

	<bean id="dataSource" class="com.elsa.seller.datasource.SellerDataSource"><!-- 读写分离配置 -->
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry value-ref="master_supplier_data_source" key="master_supplier_data_source"></entry>
				<entry value-ref="slave_supplier_data_source" key="slave_supplier_data_source"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="master_supplier_data_source">
		</property>
	</bean>

	<!-- mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>

	<bean id="transactionManager"
		class="com.elsa.seller.datasource.MeitunDataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

<!-- 	<bean id="monitorMysqlSlave" class="com.elsa.db.MonitorMysqlSlave">
		<property name="poolStr" value="dbcp"></property>
		<property name="printSqlException" value="false"></property>
	</bean> -->
</beans>